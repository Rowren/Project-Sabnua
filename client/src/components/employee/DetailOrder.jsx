import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import useSabnuaStore from '../../store/SabnuaStore';
import { getOrderUser, changeOrderStatus } from '../../api/employee';
import Swal from 'sweetalert2';
import { numberFormat } from '../../utils/number';
import { dateFormat } from '../../utils/dateFormat';
import { useNavigate } from 'react-router-dom';

const DetailOrder = () => {
    const { orderId } = useParams(); // ‡∏î‡∏∂‡∏á orderId ‡∏à‡∏≤‡∏Å URL
    const token = useSabnuaStore((state) => state.token);
    const [order, setOrder] = useState(null);
    const [loading, setLoading] = useState(false);
    const navigate = useNavigate();

    useEffect(() => {
        console.log("Order ID:", orderId); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ orderId ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å URL
        if (orderId) {  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ orderId ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô undefined
            handleGetOrder(token, orderId);
        } else {
            console.log("‡πÑ‡∏°‡πà‡∏°‡∏µ orderId ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å URL");
        }
    }, [token, orderId]);

    const handleGetOrder = async (token, orderId) => {
        setLoading(true);
        try {
            const res = await getOrderUser(token, orderId);
            console.log("Data received from API:", res.data); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API
            setOrder(res.data); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô state
        } catch (err) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', err);
        } finally {
            setLoading(false);
        }
    };

    const handleChangeOrderStatus = async (token, orderId, orderStatus) => {
        try {
            await changeOrderStatus(token, orderId, orderStatus);
            setOrder(prevOrder => ({
                ...prevOrder,
                orderStatus,
            }));

            Swal.fire({
                icon: 'success',
                title: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
                text: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ${orderId} ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ${orderStatus}`,
                confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
            });
            navigate("/employee/orders")

        } catch (err) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', err);
            Swal.fire({
                icon: 'error',
                title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ',
                confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
            });
        }
    };

    const calculateTotalWithShipping = (order) => {
        let total = order.cartTotal;
        if (order.deliveryType === 'DELIVERY') {
            total += 30; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á 30 ‡∏ö‡∏≤‡∏ó
        }
        return numberFormat(total);
    };

    if (!orderId) {
        return (
            <div className="text-center py-6">
                <h2 className="text-2xl text-red-600">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• orderId</h2>
                <p className="text-lg">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤</p>
            </div>
        );
    }

    return (
        <div className="container mx-auto p-6 bg-white shadow-lg rounded-lg mt-6"> 
                        <h1 className="text-3xl font-semibold text-yellow-700 mb-6 text-center">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h1>


            {loading ? (
                <div className="text-center py-6">
                    <div className="animate-spin h-12 w-12 border-t-4 border-blue-500 border-solid rounded-full mx-auto"></div>
                    <p className="text-gray-600 mt-2 text-lg">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
                </div>
            ) : order ? (
                <div className="p-6 bg-gray-50 rounded-lg shadow-lg">
                    <div className="flex justify-between items-center mb-4">
                        <h3 className="text-2xl font-semibold text-gray-800">‡∏£‡∏´‡∏±‡∏™‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: {order.id}</h3>
                        {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô */}
                        <p className={`text-xl font-semibold ${order.deliveryType === 'PICKUP' ? 'text-green-600' : 'text-blue-600'} flex items-center`}>
                            {order.deliveryType === 'PICKUP' ? '‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô' : '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á‡∏ö‡πâ‡∏≤‡∏ô'} 
                            {order.deliveryType === 'PICKUP' ? 'üè†' : 'üöö'}
                        </p>
                    </div>
                    
                    <p className="text-gray-700 text-lg mb-3">‡∏ú‡∏π‡πâ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: <span className="font-semibold">{order.orderedBy.name}</span></p>
                    <p className="text-gray-700 text-lg mb-3">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {order.orderedBy.tell}</p>
                    <p className="text-gray-700 text-lg mb-3">‡∏≠‡∏µ‡πÄ‡∏°‡∏•: {order.orderedBy.email}</p>
                    <p className="text-gray-700 text-lg mb-6">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {dateFormat(order.createdAt)}</p>

                    <div className="mb-4">
                        <h4 className="text-lg font-semibold text-gray-800">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£:</h4>
                        <table className="min-w-full table-auto mt-2">
                            <thead>
                                <tr>
                                    <th className="px-4 py-2 text-left font-semibold text-gray-700">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                                    <th className="px-4 py-2 text-left font-semibold text-gray-700">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                                    <th className="px-4 py-2 text-left font-semibold text-gray-700">‡∏£‡∏≤‡∏Ñ‡∏≤</th>
                                </tr>
                            </thead>
                            <tbody>
                                {order.products?.map((pd, index) => (
                                    <tr key={index} className="border-b">
                                        <td className="px-4 py-2 text-gray-700">{pd.product.title}</td>
                                        <td className="px-4 py-2 text-gray-500">{pd.count}</td>
                                        <td className="px-4 py-2 text-gray-500">{pd.product.price}</td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>

                    <p className="text-2xl text-gray-900 font-semibold mb-4">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {calculateTotalWithShipping(order)}</p>

                    <p className="text-lg text-gray-700 mb-3">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:
                        <span className={`px-3 py-2 text-xs font-medium rounded-full ${order.orderStatus === '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'
                            ? 'bg-yellow-200 text-yellow-800'
                            : order.orderStatus === '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á'
                                ? 'bg-blue-200 text-blue-800'
                                : order.orderStatus === '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
                                    ? 'bg-green-200 text-green-800'
                                    : 'bg-red-200 text-red-800'
                            } ml-2`}>
                            {order.orderStatus}
                        </span>
                    </p>

                    <p className="text-lg text-gray-700 mb-6">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: {order.deliveryAddress ? order.deliveryAddress : '‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô'}</p>

                    <div className="mt-6">
                        <label className="block text-sm font-medium text-gray-700 mb-2">‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:</label>
                        <select
                            value={order.orderStatus}
                            onChange={(e) => handleChangeOrderStatus(token, order.id, e.target.value)}
                            className="px-4 py-2 rounded-md border border-gray-300 bg-white text-sm focus:ring-blue-500 focus:border-blue-500"
                        >
                            <option>‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</option>
                            <option>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</option>
                            <option>‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</option>
                            <option>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</option>
                        </select>
                    </div>
                </div>
            ) : (
                <div className="text-center py-6">
                    <h2 className="text-2xl text-red-600">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h2>
                </div>
            )}
        </div>
    );
};

export default DetailOrder;
