import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { getDetailOrder } from "../../api/user"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ api ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå api
import { numberFormat } from "../../utils/number";
import { dateFormat } from "../../utils/dateFormat";
import useSabnuaStore from "../../store/SabnuaStore";

const DetailHistoryCard = () => {
  const { id } = useParams(); // ‡∏î‡∏∂‡∏á id ‡∏à‡∏≤‡∏Å URL
  const [order, setOrder] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const token = useSabnuaStore((state) => state.token);

  useEffect(() => {
    const fetchOrderDetail = async () => {
      try {
        const res = await getDetailOrder(token, id);
        if (res.ok) {
          setOrder(res.order);
        } else {
          setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");
        }
      } catch (err) {
        console.error("Error fetching order detail:", err);
        setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
      } finally {
        setLoading(false);
      }
    };

    fetchOrderDetail();
  }, [id]);

  if (loading) {
    return <p className="text-center text-gray-500">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
  }

  if (error) {
    return <p className="text-center text-red-500">{error}</p>;
  }

  return (
    <div className="max-w-5xl mx-auto p-6 bg-white rounded-lg shadow-lg">
      <h1 className="text-3xl font-bold text-gray-800 mb-6 text-center">üì¶ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h1>
      
      <div className="bg-gray-50 p-6 rounded-lg shadow-md border border-gray-200 mb-6">
        {/* ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ + ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <div className="flex justify-between items-center mb-4">
          <div>
            <p className="text-2xl font-semibold text-gray-800"> ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {order.id}</p>
            <p className="text-sm text-gray-500">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {dateFormat(order.createdAt)}</p>
          </div>
          <span
            className={`px-3 py-1 text-sm font-medium rounded-full ${
              order.orderStatus === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
                ? "bg-yellow-100 text-yellow-800"
                : order.orderStatus === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"
                ? "bg-blue-100 text-blue-800"
                : order.orderStatus === "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
                ? "bg-green-100 text-green-800"
                : "bg-red-100 text-red-800"
            }`}
          >
            {order.orderStatus}
          </span>
        </div>

        {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ú‡∏π‡πâ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <div className="mb-4">
          <p className="text-sm text-gray-500">üë§ ‡∏ú‡∏π‡πâ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>
          <p className="text-lg font-semibold text-gray-800">{order.orderedBy}</p>
          <p className="text-sm text-gray-500">üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {order.tell}</p>
        </div>

        {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á + ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
        <div className="mb-4">
          <p className="text-sm text-gray-500">üöö ‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</p>
          <p className="text-lg font-semibold text-gray-800">
            {order.deliveryMethod === "DELIVERY" ? "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á‡∏ö‡πâ‡∏≤‡∏ô" : "‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô"}
          </p>
          {order.deliveryMethod === "DELIVERY" && (
            <>
              <p className="text-sm text-gray-500">üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</p>
              <p className="text-lg font-semibold text-gray-800">{order.deliveryAddress}</p>
            </>
          )}
        </div>

        {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á */}
        <div className="mb-4">
          <p className="text-xl font-bold text-gray-800">üõí ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</p>
          <table className="min-w-full table-auto mt-2">
            <thead className="bg-gray-100">
              <tr>
                <th className="px-4 py-2 text-left text-gray-600">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th className="px-4 py-2 text-left text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                <th className="px-4 py-2 text-left text-gray-600">‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏ä‡∏¥‡πâ‡∏ô</th>
                <th className="px-4 py-2 text-left text-gray-600">‡∏£‡∏ß‡∏°</th>
              </tr>
            </thead>
            <tbody>
              {order.products.map((item, index) => (
                <tr key={index} className="border-t">
                  <td className="px-4 py-2">{item.title}</td>
                  <td className="px-4 py-2">{item.count} ‡∏ä‡∏¥‡πâ‡∏ô</td>
                  <td className="px-4 py-2">{numberFormat(item.price)}</td>
                  <td className="px-4 py-2 font-semibold text-blue-600">
                    {numberFormat(item.total)}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>

        {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
        <div className="flex justify-between items-center mt-4 border-t pt-4">
          <p className="text-sm text-gray-500">üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
          <p className="text-2xl font-bold text-blue-600">{numberFormat(order.total)}</p>
        </div>
      </div>
    </div>
  );
};

export default DetailHistoryCard;
